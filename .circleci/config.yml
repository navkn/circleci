version: 2.1
jobs:
  dev-auth:
    docker:
      - image: circleci/node:latest
    
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: |
            echo "Installing Salesforce CLI"
            sudo npm install -global sfdx-cli
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Login to Org
          command: |
            pwd
            ls -a
            mkdir -p tmp
            ls -a
            cd tmp
            ls -a
            echo "Hello, world!" > echo-output
            ls -a
            pwd
            cd ..
            pwd
            ls -a
            echo "decode the server key" 
            echo $JWT_ENC | base64 --decode --ignore-garbage > ./server.key
            ls -a
            pwd
            echo "Login to DevHub Org"
            sfdx force:auth:jwt:grant --clientid $HUB_CONSUMER_KEY --jwtkeyfile ./server.key --username $HUB_USER --setdefaultdevhubusername -a DevHub
            echo "DebHub successfully authenticated"
      - persist_to_workspace:
          root: /tmp
          paths:
            - echo-output
  get-sc:
    docker:
      - image: circleci/node:latest
    
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "package.json" }}
            - dependency-cache-
      - run:
          name: Install Dependencies
          command: |
            echo "Installing Salesforce CLI"
            sudo npm install -global sfdx-cli
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules
      - run: 
          name: Get a Scratch Org 
          command: |
            ls -d -l
            ls -a
            echo "check for the scratch org" 
            if ! [ $SC_ORG_USER ]; 
            then
              echo "Didn't found scrath org user and so going to use the same sc org" ;
              # echo "creating a sc org"
              # sfdx force:org:create -f ./config/project-scratch-def.json  -a  sc_org --setdefaultusername
              # echo "Scratch Org successfully created"
              # sfdx force:org:open --target-org sc_org
              # echo "Scratch Org successfully Opened"
              # echo sfdx user:list --json > userlist.json
              # SC_ORG_USER=$(grep -o '"username": "[^"]*' userlist.json | grep -o '[^"]*$')
              # export SC_ORG_USER
              # echo "The default username for the scratch org is "
              # echo $SC_ORG_USER
              # sfdx force:auth:jwt:grant --clientid $HUB_CONSUMER_KEY --jwtkeyfile ./server.key --username $SC_ORG_USER --setdefaultusername
            else 
              echo "trying to use the recently created scratch org user"
            fi
            # echo $JWT_ENC | base64 --decode --ignore-garbage > ./server.key
            # echo "Login to DevHub Org"
            # sfdx force:auth:jwt:grant --clientid $HUB_CONSUMER_KEY --jwtkeyfile ./server.key --username $HUB_USER --setdefaultdevhubusername -a DevHub
            # echo "DebHub successfully authenticated"
      
workflows:
  version: 2.1
  validate:
    jobs:
      - dev-auth
      - get-sc:
          requires:
            - dev-auth
      # - deploy-mdt:
      #     requires:
      #       - get-sc
# Use workspaces to persist data between jobs
